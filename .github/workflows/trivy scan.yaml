name: GOAT Compile
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "instalar python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.4

      - name: "Instalar requests"
        run: pip3 install requests
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target

      - name: "Dependency Check"
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'XML'
          out: 'reports'  
      
      - name: "nombrar dependecy"
        run: python3 up2.py -f reports/dependency-check-report.xml -t "Dependency Check Scan"

      - name: "Imagen Docker"
        run: |
          docker build -f Dockerfile . -t webgoat/test
          docker tag webgoat/test:latest public.ecr.aws/n3j7o1e0/cecyrep:latest
          docker images

      - name: "Run Trivy vulnerability scanner"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'webgoat/test'
          timeout: 10m0s
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          scanners: vuln,secret,config
          format: 'json'
          output: 'reporte_cecy.json'
        continue-on-error: true

         - name: "nombrar json"
           run: python3 up2.py -f reporte_cecy.json -t "Trivy Scan"


      - name: "Installing Arachni"
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
 
      - name: "Finding IP"
        run: ip_var=$(docker inspect webgoat/test | grep "IPAddress" | tail -1 | cut -d ',' -f 4)
 
      - name: "Executing Arachni"
        run: ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://$ip_webgoat:8080/WebGoat/login
 
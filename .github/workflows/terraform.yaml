name: GOAT Compile
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target

      - name: "Imagen Docker"
        run: |
          docker build -f Dockerfile . -t webgoat/test
          docker images

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CECYID}}
          aws-secret-access-key: ${{ secrets.CECYKEY }}
          aws-region: us-east-2

      - name: "imagen ECR"
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n3j7o1e0
          docker tag webgoat/test:latest public.ecr.aws/n3j7o1e0/cecyrep:latest
          docker push public.ecr.aws/n3j7o1e0/cecyrep:latest

      - name: "Aprovisionamiento terraform"
        run: |
          cd terraformm/
          terraform init 
          terraform validate
          terraform plan -out tfplan
          terraform apply tfplan >> tfplan.txt
          ip_terra=$( cat tfplan.txt | grep My_ip | xargs | cut -d '=' -f 2)
          sed -i "s/IP/$ip_terra/g" ../Ansible/inventario 

    -   name: "Ejecutar Ansible"
        env: 
          PRIVATE_KEY: ${{secrets.CECY_PEM}}
        run: |
          sudo apt update
          sudo apt install -y ansible
          cd ansible1
          echo "$PRIVATE_KEY" >> ${{secrets.CECI_PEM}}
          sudo chmod 600 ${{secrets.CECI_PEM}}
          export ANSIBLE_HOST_KEY_CHECKING= False
          ansible-playbook -i inventario server1.yaml --become
        continue-on-error: true

      - name: "Destrucci√≥n"
        run: |
          cd terraformm
          terraform plan -destroy -out tfplan
          terraform apply tfplan
          terraform destroy


          

